---
# file: roles/yavdr-xorg/tasks/detect-xorg.yml

- name: "expand template for x-verbose@.service"
  template:
    src: "templates/systemd/system/x-verbose@.service.j2"
    dest: "/etc/systemd/system/x-verbose@.service"

- name: "expand template for xorg-verbose.conf"
  template:
    src: "templates/xorg-verbose.conf.j2"
    dest: "/etc/X11/xorg-verbose.conf"

- name: Stop VDR
  systemd:
    name: vdr.service
    state: stopped
    enabled: yes
  notify: ['Start VDR']


- name: Stop xlogin
  systemd:
    name: xlogin@vdr.service
    state: stopped
    enabled: yes

- name: Stop x
  systemd:
    name: x@vt7.service
    state: stopped


- name: "start x-verbose@.service"
  systemd:
    name: "x-verbose@vt7.service"
    state: started
    enabled: false
    masked: false
    daemon_reload: true

- name: "wait a little bit, so X has some time to start up (needed?)"
  wait_for:
    timeout: 3

- name: "detect xorg configuration"
  action: xrandr_facts

- debug:
    var: xorg.primary

- debug:
    var: xorg.secondary
  when: xorg.secondary is defined

- name: "stop x-verbose@vt7.service"
  systemd:
    name: "x-verbose@vt7.service"
    state: stopped
    enabled: false
    masked: true

# IDEA: use hooks or requirements instead
# TODO: expand template for xorg.conf (or snippets)
#       with respect for the available graphics card driver
#       nvidia, noveau, intel, radeon

- name: create xorg.conf (for nvidia driver)
  template:
    src: templates/xorg.conf.j2
    dest: /etc/X11/xorg.conf
    backup: yes

- name: enable and start xlogin for the user vdr
  systemd:
    daemon_reload: yes
    name: 'xlogin@{{ vdr.user }}'
    enabled: yes
    state: started
